Coding in function ```infiniteLoop```. function accept 3  parameters. The 1st parameter is ```arr```, it's a 2D array, 
it contains three 1D array. The 2nd parameter is ```d``` ï¼Œit's a string. The 3rd parameter is ```n```, it's a number.

You can think of ```arr``` as a moat, the elements of ```arr``` like water constantly flow in. The direction of flow is 
controlled by the parameter d. The value of ```d``` can be  "left" or "right". "left" means the "river" moves to the 
left. All elements in the 1D array are to the left moving ```n``` position, if beyond the bounds of the array and the 
element is moved to the tail on the left side of the array; if it exceeds the left boundary element would be moved to 
the tail of 3rd array(like a circle). Right is also similar to the operation, but it is moving to the right.

Finally, return arr.

Example:
```
infiniteLoop( [[1,2,3],[4,5,6],[7,8,9]],"left",1) 
should return [[2,3,4],[5,6,7],[8,9,1]]
infiniteLoop( [[1,2,3],[4,5,6],[7,8,9]],"right",1) 
should return [[9,1,2],[3,4,5],[6,7,8]]
infiniteLoop( [[1,2],[3,4,5,6],[7,8,9,10]],"left",2) 
should return [[3,4],[5,6,7,8],[9,10,1,2]]
```



function infiniteLoop(arr, str, n){
  var leng=arr.map(a=>a.length); 
  var flat=arr.reduce((prev, curr)=>prev.concat(curr)); 
    if (n>flat.length) n=n-flat.length; 
    if (str=='left'){
    var aa = flat.slice(0, n); 
    for (var i=0; i<aa.length; i++)
      flat.push(aa[i]);     
      flat.splice(0, n)
  }

  else if (str=='right'){
    var bb=flat.slice(flat.length-n, flat.length); 
    var bbb = bb.reverse(); 
    for (var i=0; i<bbb.length; i++)
      flat.unshift(bbb[i])
      flat.splice(flat.length-n, flat.length); 
  }
    var result=[]; 
    for (var i=0; i<leng.length; i++){
      result.push(flat.slice(0, leng[i]))
      flat.splice(0, leng[i]); 
    }
    console.log(flat); 
    return result;     
} 
