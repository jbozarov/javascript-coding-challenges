Consider the word "abode". We can see that the letter a is in position 1 and b is in position 2. In the alphabet, a and b 
are also in positions 1 and 2. Notice also that d and e in abode occupy the positions they would occupy in the alphabet, 
which are positions 4 and 5.

Given an array of words, return an array of the number of letters that occupy their positions in the alphabet for each word. .
For example,

solve(["abode","ABc","xyzD"]) = [4, 3, 1]



function solve (arr){
	var abc = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']; 
	var lower = arr.map((a)=>a.toLowerCase()); 
	return lower.map(function(a){
		var count = 0; 
		for (var i=0; i<a.length; i++){
			if (a.charAt(i)==abc[i])
			count++; 
		}
		return count; 
	})	
}
