John wants to decorate a room with wallpaper. He has been said that making sure he has the right amount of wallpaper is more 
complex than it sounds. He wants a fool-proof method to getting it right.

John knows that the rectangular room has a length of l meters, a width of w meters, a height of h meters. The standard width of 
the rolls he wants to buy is 52 centimeters. The length of a roll is 10 meters. He bears in mind however, that itâ€™s best to have 
an extra length of wallpaper handy in case of mistakes or miscalculations so he wants to buy a length 15% greater than the one he needs.

Last time he did these calculations he caught a headache so could you help John? Your function wallpaper(l, w, h) should return 
as a plain English word in lower case the number of rolls he must buy.

Example:
wallpaper(4.0, 3.5, 3.0) should return "ten"

wallpaper(0.0, 3.5, 3.0) should return "zero"

Notes:
all rolls (even with incomplete width) are put edge to edge
0 <= l, w, h (floating numbers), it can happens that w x h x l is zero
the integer r (number of rolls) will always be less or equal to 20



function wallpaper(l, w, h) {
    if (l*w*h==0) return 'zero'; 
		else {
			var area = h*2*(l+w);
			var count =0;  
			for (var i=1; i<area; i++){
          count++;  
			}	
			 	var r=Math.ceil(area/5.2*1.15); 
				switch(r){
					case 1 :  return 'one'; 
					case 2 :  return 'two';
					case 3 :  return 'three';
					case 4 :  return 'four';
					case 5 :  return 'five';
					case 6 :  return 'six';
					case 7 :  return 'seven';
					case 8 :  return 'eight';
					case 9 :  return 'nine'; 
					case 10:  return 'ten';
					case 11 : return 'eleven'; 
					case 12 : return 'twelve';
					case 13 : return 'thirteen';
					case 14 : return 'fourteen';
					case 15 : return 'fifteen';
					case 16 : return 'sixteen';
					case 17 : return 'seventeen';
					case 18 : return 'eighteen';
					case 19 : return 'ninteen'; 
					case 20 : return 'twenty'; 
				}
		}
}
