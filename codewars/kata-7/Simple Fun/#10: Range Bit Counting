You are given two numbers a and b where 0 ≤ a ≤ b. Imagine you construct an array of all the integers from a to b 
inclusive. You need to count the number of 1s in the binary representations of all the numbers in the array.

Example
For a = 2 and b = 7, the output should be 11

Given a = 2 and b = 7 the array is: [2, 3, 4, 5, 6, 7]. Converting the numbers to binary, we 
get [10, 11, 100, 101, 110, 111], which contains 1 + 2 + 1 + 2 + 2 + 3 = 11 1s.



function rangeBitCount (a, b){
	var arr = []
	for (var i=a; i<=b; i++){
		arr.push(i); 
	}
   var bin = arr.map(a=>Number(a.toString(2)))
   var sec=bin.map(a=>a.toString().split('')); 
   var thir = sec.map(a=>a.filter(b=>b=='1')); 

   return [].concat.apply([], thir).map(a=>Number(a)).reduce((x, y)=>x+y, 0);
}
